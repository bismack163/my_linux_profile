1. dynamic debug
dev_dbg hijacked by dynamic-debug
echo "file drivers/spi/spi-pxa2xx.c +p" > /sys/kernel/debug/dynamic_debug/control 
and still need to set the log level
Documentation/dynamic-debug-howto.txt

2. python UI
wxformbuilder + wxpy

3. eclipse setting
eclipse proxy settings: socks proxy cause connection failure --- clear socks proxy and only set http/https proxy

4.kill -USR1 $(pgrep ^dd)

5. Makefile debug print (print during interpret)
$(error VAR is $(VAR))
$(warning  VAR is $(VAR))
$(info VAR is $(VAR))

6. solve "no symbol in the stack trace":
CONFIG_KALLSYMS=y

7. 8250 serial console enable/disable:
CONFIG_SERIAL_8250_CONSOLE

8. repo help <command> instead of repo <command> --help will give out more info

9. eclipse CDT for AOSP:
  - add source filter to exclude some dirs
  - window -> show view -> other -> general -> error log to show parser errors
  - Project -> c/c++ index -> create paser log file to get parser log of current opened file

10. tracing
  - cat set_event to dump all enabled trace points
  - echo > set_event to clear all enabled trace points
  - echo > trace to clear trace buffer
  - trace_marker for tracing from user space

11. history -a

12.update-alternatives
    sudo update-alternatives --config javap
    sudo update-alternatives --install /usr/bin/javap javap /opt/jdk1.6.0_45/bin/javap 300
    sudo update-alternatives --config javap
    
13. change java version
  - export PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin/:$PATH
  - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
  - export JAVA_HOME=/opt/jdk1.6.0_45/
  - export PATH=/opt/jdk1.6.0_45/bin/:$PATH

14. reinstall xserver
    boot into recovery;
    sudo apt-get purge  xorg "xserver-*" xorg-dev
    sudo apt-get purge lightdm
    //sudo apt-get purge plymouth
    sudo apt-get autoremove
    lspci -k | grep -A 2 -i "VGA
    lsmod | grep nvidia
    sudo ./NVIDIA-Linux-x86_64-375.26.run --uninstall
    reboot into console:
    sudo apt-get install xauth xorg openbox lightdm

15. eclipse for aosp
  - new workspace --> disable "build automatically"
  - edit .classpath --> new java project to aosp --> refresh
  - open c/c++ perspective --> switch to c/c++ project --> Makefile project; other toolchain --> 
    import android-include-paths.xml android-symbols.xml --> add source path filter -->rebuild index
      - https://mhandroid.wordpress.com/2011/01/23/using-eclipse-for-android-cc-development/
      - http://book.51cto.com/art/201404/435769.htm
  - ignore .git/.repo directory: Project -> Properties -> Resource -> Resource Filters and then add an "exclude" filter for type "Folder" with name ".git"
      - https://superuser.com/questions/225343/how-to-have-git-folders-ignored-by-eclipse-projects/225364#225364
  - rebuild workspace reusing .project/.cproject
      - delete workspace dir
      - create workspace, import project from aosp dir
      - remember to "ignore .git .repo"
  - get index error/log for c/c++ source file
      - open the c/c++ source file
      - project --> c/c++ indexer --> create parser log file
  - open progress view when refeshing/parsing to see stuck on which file
  - C/C++ General -> Preprocessor include -> CNU C / GNU C++ -> CDT User settings entries -> add include file "build/core/combo/include/arch/target_linux-x86/AndroidConfig.h"
  
16. git via proxy
  - create git-proxy script
      cat /usr/local/bin/git-proxy
      #!/bin/bash
      # $1 = hostname, $2 = port
      PROXY=child-prc.intel.com
      exec socat STDIO SOCKS4:$PROXY:$1:$2
  - add to ~/.gitconfig
    [core]
       gitProxy = git-proxy
  - git url override
     [url "ssh://android.intel.com:29418/"]
           pushInsteadOf=ssh://android.intel.com/
           pushInsteadOf=ssh://android.intel.com:29418/
           pushInsteadOf=ssh://jfumg-gcrmirror.jf.intel.com/
           pushInsteadOf=ssh://jfumg-gcrmirror.jf.intel.com:29418/
     [url "ssh://mcg-psi-gcrmirror2.sh.intel.com"]
          insteadOf = git://jfumg-gcrmirror.jf.intel.com
17. ssh config:
  - .ssh/config
        host 119.29.82.191
        port 29418
        user gituser123
        ProxyCommand /bin/nc -X 5 -x proxy-prc.intel.com:1080 %h %p
        IdentityFile ~/.ssh/id_rsa_fibocom
        StrictHostKeyChecking no

18. Yocto
  - list recipes:
      bitbake -s
      bitbake-layers show-recipes
  - force rebuild:
      bitbake -c compile -f somepackage
      bitbake somepackage

19: Android input:
  getevent
  adb shell input keyevent MENU (find key name from .kl file)
  (from the .kl check 115 mapped to volume up)adb shell sendevent /dev/input/event0 1 115 1; adb shell sendevent /dev/input/event0 0  0 0; adb shell sendevent /dev/input/event0 1 115 0; adb shell sendevent /dev/input/event0 0  0 0
  
20. addr2line:
  CONFIG_DEBUG_KERNEL=y
  CONFIG_FRAME_POINTER=y
  CONFIG_DEBUG_INFO=y
  For ko: objdump -dSlr my_module.ko > my_module.disasm  
  
20. list_add the same element twice may cause list_del twice on the element and crash

21. out/host/linux-x86/bin/emulator -sysdir out/target/product/generic/ -skindir development/tools/emulator/skins/ -skin WVGA800 -memory 512 -partition-size 1024 -http-proxy http://proxy-jf.intel.com:912
#out/host/linux-x86/bin/emulator -sysdir out/target/product/generic/ -system out/target/product/generic/system.img -ramdisk out/target/product/generic/ramdisk.img -data out/target/product/generic/userdata.img -sdcard sdcard.img -skindir development/tools/emulator/skins/ -skin WVGA800 -scale 0.7 -memory 512 -partition-size 1024

22. usb sysfs node decoding:
    /sys/bus/usb/devices/
    usb[busnum]: usb1, usb2, usb3 ---- usb host controllers
    [busnum]-[portnum]: 1.2, 2.2 ---- usb device at root port portnum
    [busnum]-[portnum].[portnum1]: 2.2.1 ---- usb device at hub portnum1
    [busnum]-[portnum].[portnum1]:[configuration].[interface number] ---- device created by usb_set_configuration
    related functions: usb_alloc_dev, usb_set_configuration
    
23. pci sysfs node decoding:
/sys/devices/pci0000:00/0000:00:13.2/0000:02:00.0/
/sys/devices/pci<0000:bus>/<0000:bus>:<dev num>.<func>/<0000:bus>:00.0/

24. gold fish kernel
git clone https://android.googlesource.com/kernel/goldfish/ -b android-goldfish-3.4
MYDROID=xxxx
make ARCH=arm goldfish_armv7_defconfig
echo $MYDROID
make ARCH=arm CROSS_COMPILE=$MYDROID/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi- -j8
emulator -kernel goldfish/arch/arm/boot/zImage -show-kernel &

25. odex reverse
#java -jar oat2dex.jar boot system/framework/arm/boot.oat
#java -jar oat2dex.jar -o commonservice/ system/app/commonservice-release/oat/arm/commonservice-release.odex system/framework/arm/boot.oat-dex/
#cd commonservice/
#for fn in ./*.dex; do ./jadx/bin/jadx -d out $fn; done;
to get AndroidManifest.xml:
#java -jar ~/bin/apktool_2.4.0.jar d ../../system/app/commonservice-release/commonservice-release.apk -o out

26. pycryptodome vs pycryptodomex
pycryptodome has some association to pyCrypto and can be considered a drop in replacement when migrating from PyCrypto to PyCryptodome.
pycryptodomex is a standalone version of PyCryptodome with a different naming convention; instead of the package Crypto, you have to use Cryptodome. In the case that PyCrypto is required for legacy purposes, pycryptodome should be used.

29. gdb to disassmble kernel
prebuilts/gdb/linux-x86/bin/gdb vmlinux 
(gdb) set debug aarch64
(gdb) set architecture aarch64
(gdb) print /x &snd_pcm_stream_lock_irq
$1 = 0xffff0000087ae3fc
(gdb) disassemble /m 0xffff0000087ae3fc

30. about linux console
cmdline "console=xxx,yyy" ==> parse into and add to console_cmdline(driver name, minor index, option)
uart_driver->cons (write, device, setup) ==> uart_add_one_port ==> uart_port->cons ==> uart_configure_port ==> register_console(uart_port->cons) ==> match console_cmdline ==> console->setup
printk ==> vprintk_default ==> vprintk_emit ==> console_trylock, console_unlock ==> console_cont_flush ==>call_console_drivers ==> console->write
console->device() == uart_console_device ==> (console->data == uart_driver)->tty_driver, console->index
tty_init ==> cdev_add(&console_cdev, MKDEV(TTYAUX_MAJOR=5, 1), 1) + register_chrdev_region(MKDEV(TTYAUX_MAJOR=5, 1), 1, "/dev/console")
console_cdev->console_fops->tty_open ==> device=inode->i_rdev==MKDEV(TTYAUX_MAJOR=5, 1) ==> \
    tty_open_by_driver ==> tty_lookup_driver ==> console_device ==> console->device()
                       ==> tty_driver_lookup_tty(tty_driver, index) ==> tty_struct* tty = driver->ttys[idx]; 
                       0=> tty_init_dev ==> alloc_tty_struct(index) + tty_driver_install_tty ==> uart_install ==> tty_standard_install ==> driver->ttys[tty->index] = tty;

41. graph function trace
echo 0 > /sys/kernel/debug/tracing/tracing_on
cat /sys/kernel/debug/tracing/available_tracers 
echo function_graph > /sys/kernel/debug/tracing/current_tracer 
echo test_irq_thread_fn > /sys/kernel/debug/tracing/set_graph_function 
echo 1 > /sys/kernel/debug/tracing/tracing_on
cat /sys/kernel/debug/tracing/trace

42 dump all processes
sudo find . -name stack > /tmp/sl
while read p; do echo "$p" >> /tmp/sd; cat $(dirname "$p")/cmdline >> /tmp/sd; cat $(dirname "$p")/comm >> /tmp/sd; cat $p >> /tmp/sd; done < /tmp/sl
